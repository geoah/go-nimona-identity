syntax = "proto3";
package github.com.geoah.gonimonaidentity;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.protosizer_all) = true;
option (gogoproto.sizer_all) = false;
option go_package = "identity";

// Block is our BlockEvent wrapper
message Block {
	option (gogoproto.goproto_getters) = false;
	option (gogoproto.typedecl) = false;
	github.com.geoah.gonimonaidentity.BlockEvent event = 1 [(gogoproto.nullable) = false];
	string signature = 2;
	string hash = 3;
}

// BlockEvent holds all the information for each graph node
message BlockEvent {
	option (gogoproto.goproto_getters) = false;
	option (gogoproto.typedecl) = false;
	string author = 1;
	github.com.geoah.gonimonaidentity.BlockEventPayload payload = 2 [(gogoproto.nullable) = false];
	string nonce = 3;
	repeated string parents = 4;
	string type = 5;
}

// BlockEventPayload is the arbitrary payload for each event
message BlockEventPayload {
	option (gogoproto.goproto_getters) = false;
	option (gogoproto.typedecl) = false;
	string type = 1;
	bytes content = 2;
}

// EventType for the BlockEvents
enum EventType {
	option (gogoproto.enumdecl) = false;
	option (gogoproto.goproto_enum_prefix) = false;
	option (gogoproto.goproto_enum_stringer) = false;
	// EventTypeGraphCreate is the first event for all graphs
	EVENT_TYPE_GRAPH_CREATE = 0 [(gogoproto.enumvalue_customname) = "EventTypeGraphCreate"];
}

